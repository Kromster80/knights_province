// Knights Province dynamic script.
// Wiki available at: https://github.com/Kromster80/knights_province/wiki
// Script made by DarkianMaker

const
  HUMAN_PLAYER = 0;
  ENEMY_1 = 1;
  ENEMY_2 = 2;
  ENEMY_3 = 3;
  WHITE = 4;
  MESSAGE = 100;
var
  ObjArmy, ObjCavalry, ObjRaider, ObjWin, ObjTravel: Integer;
  MessageReceived, ArmyDefeat, CavalryDefeat, RaiderDefeat, HasWon: Boolean;

procedure OnMissionStart;
begin
  Actions.PlayerNameSet(HUMAN_PLAYER, '<$3>');
  Actions.PlayerNameSet(ENEMY_1, '<$4>');
  Actions.PlayerNameSet(ENEMY_2, '<$5>');
  Actions.PlayerNameSet(ENEMY_3, '<$6>');
  Actions.PlayerNameSet(WHITE, '<$7>');
  Actions.PlayerAllianceChange(HUMAN_PLAYER, WHITE, true, false);
  Actions.PlayerAllianceChange(ENEMY_1, WHITE, true, false);
  Actions.PlayerAllianceChange(ENEMY_2, WHITE, true, false);
  Actions.PlayerAllianceChange(ENEMY_3, WHITE, true, false);
  Actions.PlayerColorChange(ENEMY_2, 64+128*256+255*65536);
  ObjTravel := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otMain, 0, osActive, '<$15>');
  ObjWin := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otMain, 1, osHidden, '<$16>');
  ObjArmy := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otMain, 2, osHidden, '<$17>');
  ObjCavalry := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otMain, 3, osHidden, '<$18>');
  ObjRaider := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otMain, 4, osHidden, '<$19>');
end;

procedure OnPlayerDefeated(aPlayer: Integer);
begin
  if aPlayer = ENEMY_1 then
  begin
	Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjArmy, osCompleted);
    ArmyDefeat := true;
  end;
  
  if aPlayer = ENEMY_2 then
  begin
    Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjCavalry, osCompleted);
	Actions.PlayerMessage(HUMAN_PLAYER, '<$26>', True);
    CavalryDefeat := true;
  end;
  if aPlayer = ENEMY_3 then
  begin
	Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjRaider, osCompleted);
	RaiderDefeat := true;
  end;
end;

procedure CheckVictoryStatus;
begin
  if ArmyDefeat and CavalryDefeat and RaiderDefeat then
  begin
    HasWon := true;
	Actions.PlayerWin([HUMAN_PLAYER], True);
  end;
end;

procedure OnTick(aTick: Integer);
begin
  if HasWon = false then CheckVictoryStatus;
  if (aTick mod MESSAGE = 0) then
  begin
	if MessageReceived = false then
	begin
	  MessageReceived := true;
	  Actions.PlayerMessage(HUMAN_PLAYER, '<$25>', True);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjTravel, osFailed);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjWin, osActive);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjArmy, osActive);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjCavalry, osActive);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjRaider, osActive);
	end;
  end;
end;
// Knights Province dynamic script.
// Wiki available at: https://github.com/Kromster80/knights_province/wiki
// Script made by DuckingDuke

const
  HUMAN_PLAYER = 0;
  ENEMY_1 = 1;
  ENEMY_2 = 2;
  GOLD_GOAL = 200;
  BANDIT_REVEAL = 60 * 10;
  BANDIT_MSG1 = 20 * 60 * 10;
  BANDIT_MSG2 = 33 * 60 * 10;
  BANDIT_MSG3 = 45 * 60 * 10;
var
  ObjGold, ObjBandits, ObjRaiders: Integer;
  PlayerCamp: Integer;
  GoldAmount: Integer;
  ObjGoldDone, ObjBanditsDone, ObjRaidersDone: Boolean;
  BanditsRevealed: Boolean;
  BanditRequest1Received, BanditRequest2Received, BanditRequest3Received: Boolean;
  BanditRequest1Met, BanditRequest2Met: Boolean;

procedure OnMissionStart;
begin
  Actions.PlayerNameSet(HUMAN_PLAYER, '<$3>');
  Actions.PlayerNameSet(ENEMY_1, '<$4>');
  Actions.PlayerNameSet(ENEMY_2, '<$5>');
  Actions.PlayerAllianceChange(ENEMY_1, ENEMY_2, true, false);
  PlayerCamp := States.HouseAt(17, 17);
  GoldAmount := States.HouseWareInside(PlayerCamp, wtGold);
  ObjGold := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otMain, 0, osActive, '<$15> (' + IntToStr(GoldAmount) + '/' + IntToStr(GOLD_GOAL) + ')');
  ObjRaiders := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otMain, 1, osActive, '<$16>');
  ObjBandits := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otMain, 2, osHidden, '<$17>');
end;

procedure OnPlayerDefeated(aPlayer: Integer);
begin
  if aPlayer = ENEMY_1 then
    begin
	  ObjRaidersDone := true;
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjRaiders, osCompleted);
	end;
  
  if aPlayer = ENEMY_2 then
    begin
	  ObjBanditsDone := true;
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjBandits, osCompleted);
	end;
end;

procedure OnHouseDestroyed(aHouse: Integer; aDestroyerIndex: Integer);
begin
  if aHouse = PlayerCamp then
    begin
	  Actions.PlayerWin([ENEMY_1], True);
	end;
end;

procedure CheckGoldObjective;
begin
  if (GoldAmount >= GOLD_GOAL) and (ObjGoldDone = false) then
    begin
      ObjGoldDone := true;
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjGold, osCompleted);
    end;
  if (GoldAmount < GOLD_GOAL) and (ObjGoldDone = true) then
    begin
      ObjGoldDone := false;
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjGold, osActive);
    end;
end;

procedure CheckVictoryStatus;
begin
  CheckGoldObjective;
  if ObjGoldDone and ObjBanditsDone and ObjRaidersDone then
    begin
	  Actions.PlayerWin([HUMAN_PLAYER], True);
    end;
end;

procedure OnScriptButtonClick(aPlayer: Integer; aTag: Integer);
begin
  if (aTag = 1) and (GoldAmount >= 10) then 
    begin
      Actions.HouseWareRemove(PlayerCamp, wtGold, 10);
	  Actions.PlayerAllianceChange(HUMAN_PLAYER, ENEMY_2, true, false);
	  BanditRequest1Met := true;
	  Actions.GiveGroup(ENEMY_2, utMilitia, 77, 17, 6, 5, 3);
      Actions.PlayerMessage(HUMAN_PLAYER, '<$27>', True);
    end;
  if (aTag = 1) and (GoldAmount < 10) then
    begin
	  Actions.PlayerMessage(HUMAN_PLAYER, '<$28>', True);
	end;
  if (aTag = 2) then
    begin
	  Actions.PlayerMessage(HUMAN_PLAYER, '<$29>', True);
	end;
  if (aTag = 3) and (GoldAmount >= 30) then 
    begin
      Actions.HouseWareRemove(PlayerCamp, wtGold, 30);
	  Actions.PlayerAllianceChange(ENEMY_1, ENEMY_2, false, false);
	  BanditRequest2Met := true;
	  CampaignData.BanditsEmployedMinor := true;
	  Actions.GiveGroup(ENEMY_2, utAxeFighter, 77, 17, 6, 3, 3);
      Actions.PlayerMessage(HUMAN_PLAYER, '<$31>', True);
    end;
  if (aTag = 3) and (GoldAmount < 30) then
    begin
	  Actions.PlayerAllianceChange(HUMAN_PLAYER, ENEMY_2, false, false);
	  Actions.PlayerMessage(HUMAN_PLAYER, '<$32>', True);
	end;
  if (aTag = 4) then
    begin
	  Actions.PlayerAllianceChange(HUMAN_PLAYER, ENEMY_2, false, false);
	  Actions.PlayerMessage(HUMAN_PLAYER, '<$33>', True);
	end;
  if (aTag = 5) and (GoldAmount >= 20) then 
    begin
      Actions.HouseWareRemove(PlayerCamp, wtGold, 20);
	  CampaignData.BanditsEmployedMajor := true;
      Actions.PlayerMessage(HUMAN_PLAYER, '<$35>', True);
	  ObjBanditsDone := true;
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjBandits, osCompleted);
    end;
  if (aTag = 5) and (GoldAmount < 20) then
    begin
	  Actions.PlayerAllianceChange(HUMAN_PLAYER, ENEMY_2, false, false);
	  Actions.PlayerMessage(HUMAN_PLAYER, '<$36>', True);
	end;
  if (aTag = 6) then
    begin
	  Actions.PlayerAllianceChange(HUMAN_PLAYER, ENEMY_2, false, false);
	  Actions.PlayerMessage(HUMAN_PLAYER, '<$37>', True);
	end;
end;

procedure OnTick(aTick: Integer);
begin
  if(aTick mod 100 = 0) then
    begin
	  GoldAmount := States.HouseWareInside(PlayerCamp, wtGold);
	  Actions.PlayerObjectiveUpdateText(HUMAN_PLAYER, ObjGold, '<$15> (' + IntToStr(GoldAmount) + '/' + IntToStr(GOLD_GOAL) + ')');
	  CheckVictoryStatus;
	end;
  if(aTick mod BANDIT_REVEAL = 0) then 
    begin
	  if BanditsRevealed = False then
	    begin
	      BanditsRevealed := True;
	      Actions.PlayerMessage(HUMAN_PLAYER, '<$25>', True);
		end;
	end;
  if(aTick mod BANDIT_MSG1 = 0) and (ObjBanditsDone = false) then
    begin
	  if BanditRequest1Received = False then
	    begin
		  BanditRequest1Received := True;
		  Actions.PlayerMessageWithButtons(HUMAN_PLAYER, '<$26>', ['Pay them', 'Refuse'], ['', ''], [1,2], True, True, True);
		end;
	end;
  if(aTick mod BANDIT_MSG2 = 0) and (ObjBanditsDone = false) and (BanditRequest1Met) then
    begin
	  if BanditRequest2Received = False then
	    begin
		  BanditRequest2Received := True;
		  Actions.PlayerMessageWithButtons(HUMAN_PLAYER, '<$30>', ['Pay them', 'Refuse'], ['', ''], [3,4], True, True, True);
		end;
	end;
	if(aTick mod BANDIT_MSG3 = 0) and (ObjBanditsDone = false) and (BanditRequest2Met) then
    begin
	  if BanditRequest3Received = False then
	    begin
		  BanditRequest3Received := True;
		  Actions.PlayerMessageWithButtons(HUMAN_PLAYER, '<$34>', ['Pay them', 'Refuse'], ['', ''], [5,6], True, True, True);
		end;
	end;
end;
// Knights Province dynamic script.
// Wiki available at: https://github.com/Kromster80/knights_province/wiki

const
  HUMAN_PLAYER = 0;
  CIDER_PACKAGE = 10;
  FISH_PACKAGE = 20;
  TALKING_HEAD_IMAGE = 'advisor.png';
  ownCampX = 18;
  ownCampY = 90;
  allyCampX = 101;
  allyCampY = 73;

var
  ownCamp, allyCamp: Integer;
  dealMarker: Integer;
  dealExplained: Boolean;

function EnoughCider: Boolean;
begin
  Result := States.HouseWareInside(ownCamp, wtCider) >= CIDER_PACKAGE;
end;


procedure RefreshMarker;
var
  markerColor: Integer;
begin
  if not dealExplained then
    markerColor := -1
  else if EnoughCider then
    markerColor := $00E0FF
  else
    markerColor := $808080;

  Actions.InteractionMarkerUpdate(dealMarker, markerColor, not dealExplained or EnoughCider, 1.5);
end;


procedure OnMissionStart;
begin
  ownCamp := States.HouseAt(ownCampX, ownCampY);
  allyCamp := States.HouseAt(allyCampX, allyCampY);
  dealMarker := Actions.InteractionMarkerAdd(itInfo, ownCampX + 0.5, ownCampY + 0.5);

  RefreshMarker;

  Actions.PlayerMessage(HUMAN_PLAYER, '<$2>', True);
end;


procedure OnScriptMarkerClick(aPlayer, aTag: Integer);
begin
  if (aPlayer = HUMAN_PLAYER) and (aTag = dealMarker) then
  begin
    if not dealExplained then
    begin
      Actions.CinematicTalkingHead(TALKING_HEAD_IMAGE, '<$3>', '');
      dealExplained := True;
    end;

    if EnoughCider then
      Actions.CinematicTalkingHeadWithButtons(TALKING_HEAD_IMAGE, '<$4>', '', ['<$5>', '<$6>'], [1, 2])
    else
      Actions.CinematicTalkingHead(TALKING_HEAD_IMAGE, '<$7>', '');
  end;

  RefreshMarker;
end;


procedure OnScriptButtonClick(aPlayer, aTag: Integer);
var
  I: Integer;
  wagon: Integer;
begin
  if (aPlayer = HUMAN_PLAYER) and (aTag = 1) then
    if EnoughCider then
    begin
      // Create a wagon
      for I := -2 to 8 do
      begin
        wagon := Actions.GiveUnit(HUMAN_PLAYER, utWagon, ownCampX + I, ownCampY + 1, 1);
        if wagon <> 0 then
        begin
          Actions.HouseWareRemove(ownCamp, wtCider, CIDER_PACKAGE);
          Actions.UnitCarryGive(wagon, wtCider, CIDER_PACKAGE);
          Actions.UnitWagonOrderEnterHouse(wagon, allyCamp);
          Break;
        end;
      end;
    end;

  RefreshMarker;
end;


procedure OnUnitWagonEnteredHouse(aUnit: Integer; aHouse: Integer);
var
  I: Integer;
  wagon: Integer;
begin
  if (States.UnitCarryType(aUnit) = wtCider) and (aHouse = allyCamp) then
  begin
    // Create new wagon
    for I := -3 to 3 do
    begin
      wagon := Actions.GiveUnit(HUMAN_PLAYER, utWagon, allyCampX + I, allyCampY - 5, 1);
      if wagon <> 0 then
      begin
        Actions.UnitCarryGive(wagon, wtFish, FISH_PACKAGE);
        Actions.UnitWagonOrderEnterHouse(wagon, ownCamp);
        Break;
      end;
    end;
  end;
end;


procedure OnTick(aTick: Integer);
begin
  if (aTick = 1) or (aTick mod 10 = 0) then
    RefreshMarker;
end;